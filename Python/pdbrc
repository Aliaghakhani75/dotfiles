# python debugger (pdb) configuration

# print str() representation, instead of the default repr(),
# intended as additions to the default 'p' and 'pp'.
alias ps p str(%*)
alias pps pp str(%*)

# pretty-print often used expressions: locals and class instance
# attributes.
alias ppl pp locals()
alias ppi pp (%*).__dict__
alias pv p vars(%*)
alias ppv pp vars(%*)

alias ipython __import__('IPython').embed()

# pretty-print sqlalchemy queries
alias pq print((%*).compile(compile_kwargs=dict(literal_binds=True)))

# pretty-print lxml elements
alias ppx print(__import__('lxml.etree').etree.tounicode((%*), pretty_print=True))

# tracebacks that omit third-party code
# fixme: this is not perfect
import traceback
alias pt print(''.join(y for y in __import__('traceback').format_stack() if '/site-packages/' not in y and '/usr/lib/' not in y))

# preserve readline history between sessions (very hacky)
import atexit
import os
import readline
readline.set_history_length(10000)
_history_path = os.path.expanduser("~/.pdb_history")
if os.path.exists(_history_path): readline.read_history_file(_history_path)
def _save_history(path): import readline; readline.write_history_file(path)
atexit.register(_save_history, _history_path)
