# vim: filetype=gitconfig

[alias]

# Identity
personal-repo = "!f() { /bin/echo -n 'Old value: '; git config user.email; git config user.email uws@xs4all.nl; /bin/echo -n 'New value: '; git config user.email; }; f"

# Committing
ci = commit
amend = commit --amend
cav = commit --all --verbose
cv = commit --verbose
cvp = commit --verbose --patch
fixup = commit --amend --no-edit
recommit = commit --amend --no-edit --reset-author
uncommit = reset --soft HEAD^

# Adding
ap = add --patch
au = add --update :/

# Diff
dif = diff
cdiff = diff --cached --find-renames
cwdiff = diff --cached --word-diff
sdiff = diff --ignore-all-space --find-renames
wdiff = diff --word-diff

# Inspecting
ls = ls-files
missing = !sh -c 'git log --oneline --left-right HEAD...$1' -
mylog = !git log --all --author="$(git config user.email)" --date-order --graph --format='%C(yellow)[%h] %ai (%ar)%C(auto)%d%n%n%C(reset)%s %n%+b'
sl = log --oneline --graph --format='%C(yellow)%h%C(auto)%C(reset)%C(auto)%d %s %C(cyan)â€” %aN, %ai (%ar)'
st = status --short --branch
today = log --all --graph --since=0am
topology = log --oneline --graph --all --simplify-by-decoration

# Branching, merging, and updating
co = checkout
delete-unused-branches = "!f() { git branch | xargs git branch --delete; }; f"
ff = merge --ff-only
merge-feature = merge --no-ff --edit
merge-issue = merge --no-ff --edit
missing = "!f() { echo \"Only in $1:\"; git sl ..$1; echo; echo 'Only in HEAD:'; git sl $1..; }; f"

# Updating from and pushing to remotes
fetchall = fetch --all --prune
fpush = push --force-with-lease
psuh = push
puhs = push
up = "!git fetch --prune; git merge --ff-only @{u}"

# Rebasing, rewriting history, and so on
plagiarize = filter-branch --env-filter "'export GIT_AUTHOR_NAME=\"$(git config user.name)\"; export GIT_AUTHOR_EMAIL=\"$(git config user.email)\"; export GIT_COMMITTER_NAME=\"$(git config user.name)\"; export GIT_COMMITTER_EMAIL=\"$(git config user.email)\"'"
rba = rebase --abort
rbc = rebase --continue
rbi = rebase --interactive

# Misc
igrep = grep --ignore-case
fgrep = grep --fixed-strings
figrep = grep --fixed-strings --ignore-case
stashk = stash save --keep-index
stashp = stash pop

[branch]
autosetuprebase = always

[color]
ui = auto

[diff]
tool = gvimdiff

[diff "po"]
textconv=msgcat --no-location --no-wrap --sort-output

[interactive]
singlekey = true

[log]
decorate = short
date = iso8601

[merge]
defaultToUpstream = true
log = 100
tool = gvimdiff

[pull]
ff = only
rebase = preserve

[push]
default = simple

[rebase]
stat = true

[user]
name = Wouter Bolsterlee
email = uws@xs4all.nl
